--[[
          ...                               .---:                                                                                             
         .%%%-                             *%%%#*                                                 :===                                        
         .%%%-    .::.  ... ...      ... .=%%%:.. ...     ..     .:.        .:..       .:.  ...  .=%%#..     ..:.      ...  .:                
         .%%%-  =#%%%%%*%%% -%%#    -%%#.*%%%%%%*.%%%.   *%%+ .*%%%%%+   -*%%%%%#=  :*%%%%%*%%%-.%%%%%%%: .+#%%%%%*-  :%%%:#%%:               
         .%%%- *%%#-::=#%%%  =%%*  .#%%: .=%%#....%%%.   *%%+ =%%#      *%%*-::=*=.:%%%=::-*%%%- .=%%#.. :%%%=::-#%%+ :%%%#+--                
         .%%%-.%%%:    :%%%   *%%= *%%-   -%%#   .%%%.   *%%+  +#%%#*- .%%%.       +%%+     #%%-  -%%#   *%%=    .%%%.:%%%:                   
    :=: .=%%%. #%%+   .*%%%    #%%*%%=    -%%#   .%%%-  .#%%+      *%%+ #%%=   :-. =%%#:   -%%%-  -%%#   =%%#.   +%%# :%%%                    
   -%%%%%%%%-  .*%%%##%%%%%    .#%%%+     -%%#    +%%%##%#%%+ =%%#*#%%- .*%%%#%%%*. =%%%##%%%%%-  .#%%%#: =#%%%#%%%+. :%%%                    
     :====:      .-===:.---     =%%*      .---     .-==-.:--:  .-===-      -===-.     :===- ---.    -==-    :-===:    .---                    
                               :%%#.                                                                                                          
                               ===.                                                                                                           
--]]

-- Jayfuscator V1.2.1 --

return(function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,w,w)local w,x,y,z,ba,bb,bc,bd,be,bf,bg,bh,bi,bj,bk,bl,bm,bn,bo,bp,bq,br,bs,bt,bu,bv,bw,bx,by,bz,ca,cb,cc,cd,ce,cf,cg,ch,ci,cj,ck=103,70,57,39,79,93,25,56,25,67,84,12,50,74,69,75,53,83,19,28,11,59,48,11,54,69,74,17,37,88,89,55,72,52,94,59,10,70,10,84,57,60,78,32,36,91,11,21,41,93 while w~=78 do if x>=705 then if x<=1035 then if x>=825 then if x>=955 then if x>=994 then if x<1029 then x=1035 z=function()local w,cl,cm,cn cm,cl,w,cn=bs(be,ce,(ce+3))ce=(ce+4);return((cn*16777216)+(w*65536)+(cl*256)+cm);end else by=function()local w w=bs(be,ce,ce)do ce=(ce+1);end return w;end x=1076 end else ce=1 x=994 end else if x>=869 then if x>875 then x=955 cc=function(w,cl,cm,cn,cn,cn)local cn cn=((w/2^(cl-1))%2^((cm-1)-(cl-1)+1))return(cn-cn%1);end else x=910 bd=(bit_lib and bit_lib.bxor or function(w,cl)w=w%(2^32)cl=cl%(2^32)local cm,cn=0,1 while w>0 and cl>0 do local co,cp=w%16,cl%16 cm=cm+bi[co+1][cp+1]*cn w=(w-co)/16 cl=(cl-cp)/16 cn=cn*16 end cm=cm+w*cn+cl*cn return cm end)end else bm=function(w,cl,cm,cn,cn,cn,cn)local cn,co,cp=68,53,42,64,39,50,10,57,64,33,48,30 while cn~=32 do if co<=103 then if co>=85 then if co<95 then co=103 cp=nil else co=149 cp=((cl/cd[w])%cd[cm])end else co=85 cp=nil end else if co>=195 then if co<208 then co=216 return cp else break end else cp=(cp-cp%1)co=195 end end end end x=869 end end else if x>=752 then if x<=752 then x=775 cd={[0]=1}else if x<795 then bv=2 x=801 else for w=1,31 do cd[w]=bv bv=(bv*2)end x=825 end end else if x<726 then cf=''x=730 else bf=(2^52)x=752 end end end else if x<=1205 then if x>=1131 then if x>=1159 then if x>1163 then x=1240 cg={}else bg=function(...)return{...},bx('#',...)end x=1205 end else x=1159 bw=function(w,w,w)local w,cl,cm,cn=63,41,80,48,45,15,79,10,42,83,48,43,67,66 while w~=40 do if cl>=125 then if cl>=143 then if cl<166 then cl=175 return cm;else break end else cl=143 ce=(ce+cn);end else if cl<=41 then cm,cn=nil cl=71 else if cl>80 then cl=125 cm=be:sub(ce,(ce+cn-1))else cn=z()cl=108 end end end end end end else if x<1108 then x=1116 cb=function()local w,cl cl,w=bs(be,ce,(ce+2))ce=(ce+2);return((w*256)+cl);end else bu=function()local w,cl,cm,cn,co,cp,cq,cr=54,44,54,58,48,57,41,69,92,23,58,95,54,34,38,26,42,47 while w~=40 do if cl<=202 then if cl>=122 then if cl>=157 then if cl>162 then cq=((-1)^bm(31,co,1))cl=226 else if((cm==0 and co==0))then return 0 end cl=202 end else cl=157 do co=z()end end else if cl<79 then cl=82 cm,cn,co,cp,cq,cr=nil else cm=z()cl=122 end end else if cl>=353 then if cl>=397 then if cl>404 then w=40;else cl=426 do return(cq*(2^(cp-1023))*(cn/bf+cr))end end else cl=397 if 0==cp then if not(cn==0)then do cp=1 end cr=0 else return(cq*0)end elseif not(cp==2047)then else if not(cn~=0)then do do return(cq*(0/0))end end else return(cq*(1/0))end end end else if cl>=268 then if cl<310 then cn=(bm(0,co,20)*4294967296+cm)cl=312 else cr=1 cl=353 end else cp=bm(20,co,11)cl=268 end end end end end x=1131 end end else if x<=1286 then if x>=1271 then if x>1277 then x=1320 do bc={}end else x=1286 do bq={}end end else do y=function(w,cl)local cl,cm,cn,co,cp,cq,cr,cs=61,72,24,64,27,25,97,85,26,56,53,31,56,23,91,44,36,63,37,66,18,87,10,73,47 while cl~=45 do if cm<=277 then if cm<=142 then if cm<=90 then if cm>77 then cr={}cm=126 else cn,co,cp,cq,cr,cs=nil cm=90 end else if cm<133 then cm=142 cq={}else cm=179 co={}end end else if cm<=202 then if cm<198 then cm=202 cp=z()else cm=232 for ct=(#cg+1),(#cg+cp)do local cp,cu,cv,cw,cx=89,40,48,30,24,65,69,21,11,48,87,33,16,78,36,59,60,17,61,15,66,62,77,23,69,57 while cp~=44 do if cu>=293 then if cu>=431 then if cu>=525 then if cu<536 then cu=540 cg[ct]=cw;else cp=44;end else if cu<474 then cw[76]=-cw[119]cu=480 else do cw[138]=-cw[126]end cu=525 end end else if cu>=364 then if cu>371 then do cw[162]=cc(cv,12,33);end cu=431 else cu=409 cw[126]=cc(cx,21,29);end else if cu>296 then cw[93]=cc(cx,e,20);cu=364 else cu=340 cw[119]=cc(cx,3,11);end end end else if cu<=130 then if cu>=111 then if cu<125 then cw[72]=by();cu=130 else cx=z()cu=170 end else if cu<60 then cv,cw,cx=nil cu=62 else cu=111 do cw={}end end end else if cu<=202 then if cu<198 then cv=z()cu=202 else cu=251 cw[164]=by();end else if cu>259 then cw[v]=cc(cv,1,11);cu=293 else cw[32]=cc(cx,1,2);cu=272 end end end end end end end else if cm>240 then cm=306 cs={}else cm=277 cn=z()end end end else if cm>=422 then if cm<=449 then if cm>424 then cm=492 co[120]=cq;else cm=449 do for e=1,z()do cq[e-1]=y();end end end else if cm>=517 then if cm<552 then cm=560 return co;else cl=45;end else cm=517 co[53]=by();end end else if cm>=356 then if cm<385 then for e=1,z()do local v,cl,cp,cq,ct,cu=97,33,55,74,12,47,67,71,72,43,98,46,71,85,82,84,92,19,33,29,33,36,37,42,94,66,24 while v~=49 do if cl>=313 then if cl<=410 then if cl>=395 then if cl>403 then cl=432 cq[126]=cc(cu,21,29);else cl=410 cq[162]=cc(cp,12,33);end else if cl>315 then do cq[119]=cc(cu,3,11);end cl=395 else cl=362 cq[16]=cc(cp,1,11);end end else if cl>=499 then if cl>=514 then if cl<552 then cl=559 cr[e]=cq;else v=49;end else cq[138]=-cq[126]cl=514 end else if cl<459 then cq[164]=cc(cu,12,20);cl=466 else do cq[76]=-cq[119]end cl=499 end end end else if cl<=131 then if cl>=84 then if cl<129 then cq[72]=by();cl=131 else cq[99]={};cl=147 end else if cl<61 then cp,cq,ct,cu=nil cl=63 else cl=84 do cq={{},nil,nil}end end end else if cl<=194 then if cl<188 then cl=194 while by()==1 do for e=1,by()do cq[99][e]={by()==0,z()}end break end else cl=212 do cu=z()end end else if cl<=212 then cl=252 cp=z()else if cl<272 then do ct=cc(cu,1,2)end cl=280 else cq[32]=ct cl=313 end end end end end end end cm=389 else co[129]=cr;cm=422 end else if cm<334 then cm=338 for e=1,cn do local v,cl,cn,cp=57,52,54,48,25,47,43,52,86,10,55,35,84,93 while v~=28 do if cl<=140 then if cl>=99 then if cl<135 then cl=140 cn=by()else do cp=nil end cl=165 end else cn,cp=nil cl=99 end else if cl>=211 then if cl<252 then cl=254 cs[e]=cp;else v=28;end else if(not(cn~=4))then cp=(0~=by());elseif(1==cn)then cp=bu();elseif(not(cn~=3))then cp=bw();elseif(0==cn)then do cp=w[bw()];end end;cl=211 end end end end else co[47]=cs cm=356 end end end end end end end x=1271 end else if x<=1320 then bz=function(e,v,w,cl)local cl,cm,cn,co,cp co=e[47]cl=e[120]cm=bq cp=e[53]cn=e[129]return function(...)local e,cm,cq,cr,cs,ct,cu,cv,cw ct=1 cq=-1 cm=-1 do cr={}end e={...}do cu=(bx('#',...)-1)end cw={}cs={}do for cm=0,cu do do if(not(cm<cp))then cr[(cm-cp)]=e[(cm+1)];else cs[cm]=e[(cm+1)];end;end end;end cv=(cu-cp+1)while true do local cm,cv,cx,cy,cz,da,db,dc,dd,de db=cn[ct]da=db[16]cy=db[c]cz=db[119]de=db[93]dc=db[126]cx=db[164]do dd=db[d]end cm=db[162]cv=db[138]if not(da<46)then if not(da>68)then if not(db[16]>56)then if not(da>50)then if not(da>47)then do if not(da~=46)then ct=cm;else if cs[cz]then ct=cm;end;end end else if not(da<49)then if(db[16]>49)then else local c,d,cy,df do df=cz end d={cs[df]()}cy=dc c=0 for dg=df,cy do do c=(c+1);end cs[dg]=d[c];end end else cn[ct]=cg[cx];ct=cm;end end else if not(db[16]<54)then if not(da>54)then do return cs[dd][cx]end else do if(da>55)then cs[cz]();else w=cs[db[cz]]end end end else if not(da>51)then if((cs[cz]>cs[dc]))then ct=cm;end;else do if(db[16]>52)then local c do c=cz end do cs[c]=cs[c](cs[c+1]);end else cs[cv]();end end end end end else if not(db[16]<63)then if not(da<66)then if not(da<67)then if(da<68)then do cs[cz]=(not(cm==0));end ct=(ct+1);else local c c=cz cs[c]=cs[c](bo(cs,c+1,cq));end else cs[cz]=cs[cm][co[dc]];end else if not(da<64)then if(da>64)then cs={};for c=0,cu do if(c<cp)then cs[c]=e[(c+1)];else break end;end;elseif((cs[cz]<cs[dc]))then ct=cm;end else cs[cz]=(cs[cm]+cs[dc]);end end else if not(da>59)then if not(da<58)then if(da<59)then local c c=cs[dd][cx]cs[dd][cx]=(c..cs[dc]);else cs[cz]=(cs[cm]/cs[dc]);end else local c,d do d=cz end c={}if(#cw>0)then for e=1,#cw do local cp cp=cw[e]do for e=0,#cp do local cu,cx,cy cu=cp[e]cx=cu[1]cy=cu[2]if(cx==cs and cy>=0)then c[cy]=cx[cy]cu[1]=c end end end end end do return bo(cs,d,cq);end end else if not(da<61)then if(da<62)then if(not(cs[cz]==co[dc]))then do ct=cm;end end;else local c,d,e d=db[119]e=cs[(d+2)]c=(cs[d]+e)cs[d]=c;if((e>0))then while(c<=cs[d+1])do ct=db[162];cs[d+3]=c;break end elseif(not(c<cs[d+1]))then ct=db[162];cs[(d+3)]=c;end end else local c c=cz cs[c]=cs[c](bo(cs,c+1,cm));end end end end else if not(da<81)then if not(da<87)then if not(da>89)then if not(db[16]>87)then do cs[cz]=bq[de]end else if(da>88)then cs[cz][co[cm]]=co[dc];else local c do c={}end while(#cw>0)do for d=1,#cw do local d=cw[d]for e=0,#d do local d=d[e]local e=d[1]local cp=d[2]if e==cs and cp>=0 then c[cp]=e[cp]d[1]=c end end end break end return db[cz],false;end end else if not(db[16]<91)then if not(da~=91)then local c do c=cz end do return bo(cs,c,(c+cm))end;else cs[db[119]]=co[cm]end else cs[cz]=(cs[db[162]]+co[dc]);end end else if not(db[16]>83)then if not(db[16]>81)then do ct=((cs[cz]~=cs[dc])and cm or ct)end else if(da<83)then cs[cz]=#cs[db[162]];else cs[cz]=bz(cl[cm],nil,w);end end else if not(da<85)then do if(da>85)then ct=((cs[db[119]]<cs[db[126]])and db[162]or ct)else local c,d,e,cp e=cz d,c=bg(cs[e](bo(cs,(e+1),cm)))cq=(c+e-1)cp=0 for c=e,cq do cp=(cp+1);cs[c]=d[cp];end;end end else if not cs[cz]then ct=cm;end;end end end else do if not(da>74)then if not(da>71)then do if not(da<70)then if(da<71)then if((co[cz]<cs[dc]))then ct=cm;end;else end else cs[cz]=(cs[cm]*co[dc]);end end else if not(db[16]<73)then if m==da then local c do c=cz end do return cs[c](bo(cs,(c+1),cm))end;else bq[cz]={}end else cs[cz]=(not cs[db[162]]);end end else if not(da>77)then if not(da>75)then cn[ct]={[164]=0,[119]=8,[16]=da-9,[126]=13,[162]=8};ct=(ct-1);else if(da<77)then local c,d c=db[119]d=cm for e=c,d do cs[e]=cr[(e-c)];end;else cs[cz]=cs[cm]end end else if not(db[16]<79)then if(da<80)then bq[cz]()else co=bq[cz](co)end else local c,d,e c=cz e={cs[c](bo(cs,c+1,db[162]))}d=0 for m=c,db[126]do d=(d+1);cs[m]=e[d];end end end end end end end else if not(da<23)then if not(da<34)then if not(da>39)then if not(da<37)then if not(da<38)then if(da>38)then cs[cz]=(cs[cm]^cs[db[126]]);else if cz then cz=false;dc=db[162];do ct=(ct-1);end else ct=(ct+cm+db[126]);end end else cs[cz]={};end else if not(da>34)then for c=cz,db[162]do cs[c]=nil;end;else if(da<36)then local c,d d=cm c=cs[d]for e=(d+1),dc do c=(c..cs[e]);end;cs[cz]=c;else cs[cv]=(function()cs[cz]=bz(cl[de],nil,w);end)end end end else do if not(da>42)then if not(db[16]>40)then local c,d,e,m,cp c=cz do e=dc end d=(c+2)m={cs[c](cs[c+1],cs[d])}for cr=1,e do cs[(d+cr)]=m[cr]end cp=cs[(c+3)]do if cp then cs[d]=cp else ct=cm;end;end else if(da>41)then cs[db[119]]=-cs[cm];else do return cs[cz]end end end else if not(db[16]>43)then do bq[cz]=bq[de]end else do if(da<45)then local c,d d,c=bg(...)do for c=1,cz do cs[(c-1)]=d[c]end end else cs[db[119]]=(cs[db[162]]/co[dc]);end end end end end end else if not(da>27)then if not(da>24)then if 23==da then v[cm]=cs[cz];else bq[db[119]]=cs[de]end else do if not(db[16]>25)then local c,d,e do d=cz end c=cs[d]e=cs[(d+2)]if((e>0))then do if((c>cs[d+1]))then do ct=cm;end else do cs[(d+3)]=c;end end end elseif((c<cs[d+1]))then ct=db[162];else cs[(d+3)]=c;end else if 26==da then cs[cv]=(function()cs[cz]=bz(cl[de],nil,w);end)else local c,d c=cz d=cs[db[162]]cs[(c+1)]=d;cs[c]=d[co[dc]];end end end end else do if not(da<q)then if not(da<32)then if(da>32)then cn[ct]={[164]=0,[162]=2,[126]=0,[119]=15,[16]=da- -8};ct=(ct-1);elseif not cs[dc]then cs[db[119]]=cs[dc];do ct=cm;end end else ct=((co[cz]<cs[db[126]])and db[162]or ct)end else if not(db[16]<29)then do if(da>29)then cs[cz][cs[db[162]]]=cs[db[126]];else local c,d d=cz do c={}end for e=1,#cw do local m m=cw[e]for e=0,#m do local q,cl,cp cl=m[e]q=cl[1]cp=cl[2]while q==cs and cp>=d do c[cp]=q[cp];cl[1]=c;break end end;end;end end else do cs[cz]=nil;end end end end end end else if not(da<11)then if not(da>16)then if not(da>13)then if not(da>11)then cs[cz]=bq[de]else if not(da~=12)then bq=cs else do cs[cz]=cs[cm][cs[dc]];end end end else do if not(da>14)then else if(da<16)then cs[db[cz]]=cs else cs[cz]=w[co[cm]];end end end end else if not(da>19)then if not(da<18)then if not(da~=18)then local c,d,e do c=cz end e={cs[c](cs[c+1])}do d=0 end for m=c,dc do do d=(d+1);end do cs[m]=e[d];end end else local c,d,e c=db[119]e=cs[c]d=cm for m=1,d do e[m]=cs[(c+m)]end;end else local c,d,e,m d=cz e=((dc-1)*50)m=cs[d]do c=cm end for q=1,c do do m[(e+q)]=cs[(d+q)]end end;end else if not(da>20)then do if(not(cs[db[119]]==cs[dc]))then do ct=cm;end end;end else if(da>21)then cn[ct]=cg[db[164]];ct=cm;else local c c=cz cs[c](bo(cs,(c+1),cm))end end end end else if not(da>4)then do if not(da<2)then if not(da<3)then if(db[16]>3)then w[co[cm]]=cs[cz];else cs[cz]=(cs[db[162]]-cs[dc]);end else cs[cz]=v[cm];end else do if(da<1)then cs[cz]=(cs[cm]%co[dc]);else do cs[db[119]]=(cs[db[162]]%cs[dc]);end end end end end else do if not(da>7)then if not(da>5)then cq=db[cz];else if not(da~=6)then do cs[cz]=(cs[cm]*cs[dc]);end else do cs[cz]=cs[cm];end end end else if not(db[16]<9)then if not(da~=9)then if(not(cs[cz]<cs[dc]))then ct=cm;end;else cs[cz]=w[co[db[162]]][co[dc]];end else local c,d d=cz c=cs[db[162]]do cs[(d+1)]=c;end cs[d]=c[cs[dc]];end end end end end end end ct=(ct+1);end;end;end x=1365 else if x>1374 then break else x=1389 do return bz(y(bb()),{},bb())();end end end end end end else if x>=382 then if x>=551 then if x<=614 then if x<=551 then x=569 do bo=(unpack or table.unpack)end else if x>574 then x=636 bl={}else br=tonumber x=614 end end else if x<=636 then x=653 for c=0,255 do bl[c]=bn(c);end else if x<677 then x=682 be=chfunction(c,d,d,d,d)return bl[br(c,16)]end)else do bi={{n,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,},{1,p,3,2,5,4,7,6,9,8,11,10,13,12,15,14,},{2,3,0,1,k,7,4,5,10,11,8,9,14,f,12,13,},{3,2,1,0,7,6,5,4,11,10,r,8,15,14,13,12,},{4,5,6,7,0,1,2,3,12,13,14,15,8,9,10,11,},{5,4,7,6,1,0,3,2,13,12,15,14,9,8,11,10,},{6,7,4,5,2,3,0,1,14,u,12,13,10,11,8,9,},{7,6,5,4,3,2,l,0,15,14,13,12,11,10,9,8,},{8,9,10,11,12,13,14,15,0,1,2,3,o,5,6,7,},{s,8,11,b,13,12,15,14,1,0,h,2,5,4,7,6,},{10,11,8,9,14,15,j,13,2,3,0,i,6,7,4,5,},{11,10,9,8,15,14,13,g,3,2,1,0,7,6,5,4,},{12,13,14,15,8,9,10,11,4,5,6,7,0,1,2,3,},{13,12,15,14,9,8,11,10,5,4,7,6,1,0,3,2,},{14,15,12,13,10,11,8,9,6,7,4,5,2,3,t,1,},{15,14,13,a,11,10,9,8,7,6,5,4,3,2,1,0,},nil,nil,nil}end x=705 end end end else if x<=404 then if x>385 then bk=type x=443 else x=404 bx=select end else if x>=470 then if x<508 then x=514 cj=math.abs else x=551 bj=math.floor end else ba=(function(a,b,b)if not(bk(a)~='number')then return true else return false end end)x=470 end end end else if x<=168 then if x>=123 then if x<=123 then bn=string.char x=147 else if x<162 then x=168 do bh=string.sub end else x=205 ch=string.gsub end end else if x<85 then x=92 y,z,ba,bb,bc,bd,be,bf,bg,bh,bi,bj,bk,bl,bm,bn,bo,bp,bq,br,bs,bt,bu,bv,bw,bx,by,bz,ca,cb,cc,cd,ce,cf,cg,ch,ci,cj,ck=nil else do bs=string.byte end x=123 end end else if x<=268 then if x>=248 then if x<266 then ca=table.concat x=268 else ci=table.insert x=290 end else bp=string.rep x=248 end else if x<=290 then bt=math.ldexp x=312 else if x<345 then do bb=(getfenv or function()return _ENV end)end x=352 else do ck=setmetatable end x=382 end end end end end end end end)(12,10,72,76,12,15,12,3,1,12,6,1,73,0,4,0,31,9,9,0,15,16)